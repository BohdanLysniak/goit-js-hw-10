{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startButton = document.querySelector(\"[data-start]\");\nstartButton.disabled = true;\nconst daysTimer = document.querySelector(\"[data-days]\");\nconst hoursTimer = document.querySelector(\"[data-hours]\");\nconst minutesTimer = document.querySelector(\"[data-minutes]\");\nconst secondsTimer = document.querySelector(\"[data-seconds]\");\n\n\nlet userSelectedDate;\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDates = selectedDates[0];\n    if (selectedDates < new Date()) {\n      iziToast.error({\n    position: \"topRight\",\n    title: \"Error\",\n    message: \"Please choose a date in the future\",\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDates;\n      startButton.disabled = false;\n    }\n  },\n});\n\n\nstartButton.addEventListener(\"click\", startTimer);\n\nfunction startTimer() {\n  setInterval(() => {\n    let remainerOfTime = userSelectedDate.getTime() - Date.now();\n    daysTimer.innerHTML = convertMs(remainerOfTime).days;\n    hoursTimer.innerHTML = convertMs(remainerOfTime).hours;\n    minutesTimer.innerHTML = convertMs(remainerOfTime).minutes;\n    secondsTimer.innerHTML = convertMs(remainerOfTime).seconds;\n  }, 1000)\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\n"],"names":["startButton","daysTimer","hoursTimer","minutesTimer","secondsTimer","userSelectedDate","flatpickr","selectedDates","iziToast","startTimer","remainerOfTime","convertMs","ms","days","hours","minutes","seconds"],"mappings":"wvBAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GACvB,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAG5D,IAAIC,EAEJC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBA,EAAgBA,EAAc,CAAC,EAC3BA,EAAgB,IAAI,MACtBC,EAAS,MAAM,CACjB,SAAU,WACV,MAAO,QACP,QAAS,oCACb,CAAO,EACDR,EAAY,SAAW,KAEvBK,EAAmBE,EACnBP,EAAY,SAAW,GAE1B,CACH,CAAC,EAGDA,EAAY,iBAAiB,QAASS,CAAU,EAEhD,SAASA,GAAa,CACpB,YAAY,IAAM,CAChB,IAAIC,EAAiBL,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC1DJ,EAAU,UAAYU,EAAUD,CAAc,EAAE,KAChDR,EAAW,UAAYS,EAAUD,CAAc,EAAE,MACjDP,EAAa,UAAYQ,EAAUD,CAAc,EAAE,QACnDN,EAAa,UAAYO,EAAUD,CAAc,EAAE,OACpD,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}