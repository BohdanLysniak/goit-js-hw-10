{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputTimer = document.querySelector(\"#datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nstartButton.disabled = true;\nconst daysDisplay = document.querySelector(\"[data-days]\");\nconst hoursDisplay = document.querySelector(\"[data-hours]\");\nconst minutesDisplay = document.querySelector(\"[data-minutes]\");\nconst secondsDisplay = document.querySelector(\"[data-seconds]\");\n\n\nlet userSelectedDate;\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDates = selectedDates[0];\n    if (selectedDates < new Date()) {\n      iziToast.error({\n    position: \"topRight\",\n    title: \"Error\",\n    message: \"Please choose a date in the future\",\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDates;\n      startButton.disabled = false;\n    }\n  },\n});\n\nstartButton.addEventListener(\"click\", startTimer);\n\nfunction startTimer() {\n    let intervalID = setInterval(() => {\n    const currentTime = Date.now();\n    let remainerOfTime = userSelectedDate.getTime() - currentTime;\n    daysDisplay.textContent = addLeadingZero(convertMs(remainerOfTime).days);\n    hoursDisplay.textContent = addLeadingZero(convertMs(remainerOfTime).hours);\n    minutesDisplay.textContent = addLeadingZero(convertMs(remainerOfTime).minutes);\n    secondsDisplay.textContent = addLeadingZero(convertMs(remainerOfTime).seconds);\n    if (remainerOfTime < 1000) {\n      clearInterval(intervalID);\n    }\n  }, 1000);\n  startButton.disabled = true;\n  inputTimer.disabled = true;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, \"0\");\n}\n\n"],"names":["inputTimer","startButton","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","userSelectedDate","flatpickr","selectedDates","iziToast","startTimer","intervalID","currentTime","remainerOfTime","addLeadingZero","convertMs","ms","days","hours","minutes","seconds","value"],"mappings":"8IAKA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GACvB,MAAMC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAG9D,IAAIC,EAEJC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBA,EAAgBA,EAAc,CAAC,EAC3BA,EAAgB,IAAI,MACtBC,EAAS,MAAM,CACjB,SAAU,WACV,MAAO,QACP,QAAS,oCACb,CAAO,EACDR,EAAY,SAAW,KAEvBK,EAAmBE,EACnBP,EAAY,SAAW,GAE1B,CACH,CAAC,EAEDA,EAAY,iBAAiB,QAASS,CAAU,EAEhD,SAASA,GAAa,CAClB,IAAIC,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACzB,IAAIC,EAAiBP,EAAiB,QAAO,EAAKM,EAClDV,EAAY,YAAcY,EAAeC,EAAUF,CAAc,EAAE,IAAI,EACvEV,EAAa,YAAcW,EAAeC,EAAUF,CAAc,EAAE,KAAK,EACzET,EAAe,YAAcU,EAAeC,EAAUF,CAAc,EAAE,OAAO,EAC7ER,EAAe,YAAcS,EAAeC,EAAUF,CAAc,EAAE,OAAO,EACzEA,EAAiB,KACnB,cAAcF,CAAU,CAE3B,EAAE,GAAI,EACPV,EAAY,SAAW,GACvBD,EAAW,SAAW,EACxB,CAEA,SAASe,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASN,EAAeO,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}